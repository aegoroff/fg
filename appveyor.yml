# version format
version: 0.1.{build}

clone_folder: c:\gopath\src\fg

# branches to build
branches:
  # whitelist
  only:
    - master

# Do not build on tags (GitHub only)
skip_tags: true

# environment variables
environment:
  GOPATH: c:\gopath

install:
  - echo %PATH%
  - echo %GOPATH%
  - set PATH=%GOPATH%\bin;c:\go\bin;C:\msys64\usr\bin;%PATH%
  - go version
  - go env
  - go get -u "github.com/stretchr/testify/assert"
  - go get -u "github.com/spf13/afero"
  - go get -u "github.com/spf13/cobra"
  - go get -u "github.com/aegoroff/godatastruct/collections"
  - go get "github.com/mitchellh/gox"

stack: go ^1.14

image: Visual Studio 2019

build_script:
  - gox -osarch="linux/amd64 linux/arm linux/arm64 linux/386 darwin/amd64 windows/amd64 windows/386" -ldflags "-X fg/cmd.Version=%APPVEYOR_BUILD_VERSION%" fg

test_script:
  - go test -coverprofile=coverage.txt -covermode=atomic fg/...

after_test:
  - ps: Invoke-WebRequest -Uri 'https://codecov.io/bash' | bash -s -- -c -F aFlag -f "coverage.txt" -t $env:CODECOV_TOKEN

artifacts:
  - path: fg_windows_amd64.exe
    name: binary
  - path: fg_windows_386.exe
    name: binary
  - path: fg_linux_amd64
    name: binary
  - path: fg_linux_386
    name: binary
  - path: fg_linux_arm
    name: binary
  - path: fg_linux_arm64
    name: binary
  - path: fg_darwin_amd64
    name: binary